---
- name: Dell G15 Ubutnu WSL playbook
  hosts: localhost

  tasks:
    - name: Add PPAs
      become: true
      ansible.builtin.apt_repository:
        repo: '{{ item }}'
        state: present
      loop:
        # keep-sorted start case=no
        - ppa:fish-shell/release-4
        # keep-sorted end

    - name: Add mise reoo
      become: true
      block:
        - name: Download mise key
          ansible.builtin.get_url:
            url: https://mise.jdx.dev/gpg-key.pub
            dest: /etc/apt/keyrings/mise-archive-keyring.asc
            mode: '0644'
            checksum: sha256:91c72340c5cc84ae2ba98c1070083feacf789b0a4a3d34b2416147769e475d96
        - name: Add mise repo
          ansible.builtin.apt_repository:
            repo: deb [signed-by=/etc/apt/keyrings/mise-archive-keyring.asc arch=amd64] https://mise.jdx.dev/deb stable main
            state: present
            filename: mise

    - name: Install main packages
      become: true
      ansible.builtin.apt:
        name:
          # keep-sorted start case=no
          - apt-file
          - bat
          - clang # needed for neovim
          - fd-find
          - fish
          - flatpak # preferred package manager
          - fzf
          - gedit # pulls in GUI libraries
          - jq
          - mise
          - ripgrep
          - snapd
          - zoxide
          - zsh
          # keep-sorted end
        state: present

    - name: Add flathub flatpak repo
      become: true
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: system

    - name: Install flathub packages
      become: true
      community.general.flatpak:
        name:
          - com.github.tchx84.Flatseal
        state: present

    - name: Set user's shell to fish
      become: true
      ansible.builtin.user:
        name: '{{ ansible_user_id }}'
        shell: /usr/bin/fish
        state: present

    - name: Install neovim (classic snap)
      become: true
      community.general.snap:
        name: nvim
        classic: true
        state: present

    - name: Enable user systemd-tmpfiles setup
      ansible.builtin.systemd_service:
        name: systemd-tmpfiles-setup
        enabled: true
        state: started
        scope: user

    - name: Enable user systemd-tmpfiles cleanup
      ansible.builtin.systemd_service:
        name: systemd-tmpfiles-clean.timer
        enabled: true
        scope: user

    - name: Enable atuin socket activation
      ansible.builtin.systemd_service:
        name: atuin.socket
        enabled: true
        state: started
        scope: user
