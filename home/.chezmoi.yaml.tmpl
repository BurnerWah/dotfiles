# chezmoi:template:left-delimiter="# {{" right-delimiter=}}

# {{- $osID := .chezmoi.os -}}
# {{- $distro := "unknown" -}}
# {{- if (and (eq .chezmoi.os "linux") (hasKey .chezmoi.osRelease "id")) -}}
# {{-   $osID = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
# {{-   $distro = .chezmoi.osRelease.id -}}
# {{- end -}}

diff:
  command: delta

edit:
  command: code
  args: [--wait]

gitHub:
  refreshPeriod: 12h # Don't check GitHub too often

interpreters:
  ps1:
    command: pwsh
    args: [-NoLogo, -NonInteractive, -NoProfile]
  elv:
    command: elvish
    args: [-norc]
  js:
    command: node

# {{- if eq .chezmoi.os "windows" }}
cd:
  command: pwsh
# {{- end }}

textconv:
  - pattern: '**/*.plist'
    command: plutil
    args: [-convert, xml1, -o, '-', '-']

# {{- /* based on twpayne/dotfiles */ -}}
# {{- /* boolean feature tags */ -}}
# {{- /* true if this machine is ephemeral, e.g. a cloud or VM instance */ -}}
# {{- $ephemeral := false -}}
# {{- /* true if this machine does not have a screen and keyboard */ -}}
# {{- $headless := false -}}

# {{- /* Detect WSL */ -}}
# {{- $wsl := and (eq .chezmoi.os "linux") (.chezmoi.kernel.osrelease | lower | contains "microsoft") -}}
# {{- if $wsl -}}
# {{-   $headless = true -}}
# {{- end -}}

# {{- /* detect GitHub codespaces, VSCode remote containers, Docker containers, Multipass VMs, and Vagrant boxes */ -}}
# {{- if or (env "CODESPACES") (env "REMOTE_CONTAINERS_IPC") (eq .chezmoi.username "root" "ubuntu" "vagrant" "vscode") -}}
# {{-   $ephemeral = true -}}
# {{-   $headless = true -}}
# {{- end }}

# {{- /* Detect lima */ -}}
# {{- $lima := and (eq .chezmoi.os "linux") (hasPrefix "lima-" .chezmoi.hostname) -}}
# {{- if $lima -}}
# {{-   $headless = true -}}
# {{- end -}}

# {{- /* figure out internal name for the device */ -}}
# {{- $devicename := .chezmoi.hostname -}}
# {{- if eq .chezmoi.os "linux" -}}
# {{-   if $wsl -}}
# {{-     if hasKey .chezmoi.osRelease "id" -}}
# {{-       $devicename = printf "%s-wsl-%s" (lower $devicename) .chezmoi.osRelease.id -}}
# {{-     else -}}
# {{-       $devicename = printf "%s-wsl-unknown" (lower $devicename) -}}
# {{-     end -}}
# {{-   end -}}
# {{-   if eq $devicename "wah" -}}
# {{-     $devicename = "dell-g15-linux" -}}
# {{-   end -}}
# {{- end -}}
# {{- if eq .chezmoi.os "windows" -}}
# {{-   if eq $devicename "Dell-G15" -}}
# {{-     $devicename = "dell-g15-windows" -}}
# {{-   end -}}
# {{- end -}}

# TODO: prompt user to see if device is ephemeral or headless, when possible

# {{- $mullvad := false -}}
# {{- $tailscale := lookPath "tailscale" -}}
# {{- if and (eq .chezmoi.os "darwin") (empty $tailscale) -}}
# {{-   $tailscale = "/Applications/Tailscale.app/Contents/MacOS/Tailscale" -}}
# {{- end -}}
# {{- if and (ne .chezmoi.os "windows") $tailscale -}}
# {{-   with $CapMap := dig "Self" "CapMap" (dict) (output "sh" "-c" (printf "%s status --json || echo {}" $tailscale) | mustFromJson) -}}
# {{-     $mullvad = hasKey $CapMap "mullvad" -}}
# {{-   end -}}
# {{- end }}
# TODO: Add windows support for the mullvad flag

# {{- $chassisType := "desktop" }}
# {{- if eq .chezmoi.os "darwin" }}
# {{-   if contains "MacBook" (output "sysctl" "-n" "hw.model") }}
# {{-     $chassisType = "laptop" }}
# {{-   else }}
# {{-     $chassisType = "desktop" }}
# {{-   end }}
# {{- else if eq .chezmoi.os "linux" }}
# {{-   $chassisType = (output "hostnamectl" "--json=short" | mustFromJson).Chassis }}
# {{- else if eq .chezmoi.os "windows" }}
# {{-   $chassisType = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "if ((Get-CimInstance -Class Win32_Battery | Measure-Object).Count -gt 0) { Write-Output 'laptop' } else { Write-Output 'desktop' }") | trim }}
# {{- end }}

# {{- $xdgConfig := joinPath .chezmoi.homeDir ".config" }}
# {{- $xdgCache := joinPath .chezmoi.homeDir ".cache" }}
# {{- $xdgData := joinPath .chezmoi.homeDir ".local/share" }}
# {{- $xdgState := joinPath .chezmoi.homeDir ".local/state" }}
# {{- if eq .chezmoi.os "darwin" }}
# {{-   $xdgCache = joinPath .chezmoi.homeDir "Library/Caches" }}
# {{-   $xdgData = joinPath .chezmoi.homeDir "Library/Application Support" }}
# {{- end }}

data:
  devicename: # {{ $devicename }}
  distro: # {{ $distro }}
  ephemeral: # {{ $ephemeral }}
  headless: # {{ $headless }}
  mullvad: # {{ $mullvad }}
  osid: # {{ $osID }}
  wsl: # {{ $wsl }}
  xdg:
    config: '# {{ $xdgConfig }}'
    cache: '# {{ $xdgCache }}'
    data: '# {{ $xdgData }}'
    state: '# {{ $xdgState }}'
  pkg:
    scoop:
      apps: '# {{ joinPath .chezmoi.homeDir "scoop/apps" }}'
      persist: '# {{ joinPath .chezmoi.homeDir "scoop/persist" }}'
    flatpak:
      system: '# {{ env "FLATPAK_SYSTEM_DIR" | default "/var/lib/flatpak" }}'
      user: '# {{ env "FLATPAK_USER_DIR" | default (joinPath $xdgData "flatpak") }}'
  device:
    # can be "laptop", "desktop", "convertible", "server", "tablet", "handset", "watch", "embedded", "vm", or "container"
    chassis: '# {{ $chassisType }}'
    wsl: # {{ $wsl }}
    lima: # {{ $lima }}
